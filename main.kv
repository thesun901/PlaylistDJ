#:import Factory kivy.factory.Factory
WindowManager:
    MainLayout:
    OnePointSearchLayout:
        id: one_point_layout


<VioletColor@Color>
    rgba: 0.9, 0.25, 0.9, 1

<ImageButton@ButtonBehavior+Image>:
    source: 'magic_circle.png'

#-----------------------------------------POPUPS---------------------------------------------------------
<PlaylistPopup@Popup>
    auto_dismiss: True
    title: "Load playlist"
    separator_color: 0.9, 0.25, 0.9, 1
    size_hint: 0.7, 0.7

    FloatLayout:
        width: root.width - 100
        height: root.height - 100

        TextInput:
            text: "spotify link to playlist"
            foreground_color: 1, 1, 1, 1
            id: playlist_link
            size_hint: 0.65, 0.08
            pos_hint: {"x": 0.1, "center_y": 0.9}
            multiline: False
            background_color: 0.3, 0.3, 0.3, 1
            on_focus:
                self.text = "" if self.text == "spotify link to playlist" else self.text



        Button:
            pos_hint: {"center_x": 0.9, "center_y": 0.9}
            size_hint: 0.15, 0.07
            background_color: 0,0,0,0
            text: "Load"
            bold: True
            color: 1, 1, 1, 1
            canvas.before:
                Color:
                    rgba: (0.9, 0.25, 0.9, 1) if self.state=='normal' else (0,.7,.7,1)
                RoundedRectangle:
                    pos: self.pos
                    size: self.size
                    radius: [15,]
            on_release:
                root.load_playlist()

        Button:
            pos_hint: {"center_x": 0.65, "center_y": 0.1}
            size_hint: 0.25, 0.10
            background_color: 0,0,0,0
            text: "Apply"
            bold: True
            color: 1, 1, 1, 1
            canvas.before:
                Color:
                    rgba: (0.9, 0.25, 0.9, 1) if self.state=='normal' else (0,.7,.7,1)
                RoundedRectangle:
                    pos: self.pos
                    size: self.size
                    radius: [25,]
            on_release:
                root.set_root_playlist()
                root.dismiss()


#        Button:
#            pos_hint: {"center_x": 0.5, "center_y": 0.1}
#            size_hint: 0.25, 0.10
#            background_color: 0,0,0,0
#            text: "Load favourites"
#            bold: True
#            color: 1, 1, 1, 1
#            canvas.before:
#                Color:
#                    rgba: (0.116, 0.843, 0.376, 1) if self.state=='normal' else (0,.7,.7,1)
#                RoundedRectangle:
#                    pos: self.pos
#                    size: self.size
#                    radius: [25,]
#            on_release:

        Button:
            pos_hint: {"center_x": 0.35, "center_y": 0.1}
            size_hint: 0.25, 0.10
            background_color: 0,0,0,0
            text: "Cancel"
            bold: True
            color: 1, 1, 1, 1
            canvas.before:
                Color:
                    rgba: (0.5, 0.5, 0.5, 1) if self.state=='normal' else (0,.7,.7,1)
                RoundedRectangle:
                    pos: self.pos
                    size: self.size
                    radius: [25,]
            on_release:
                root.dismiss()
        AsyncImage:
            id: popup_playlist_image
            size_hint: 0.5, 0.5
            pos_hint: {"center_x": 0.3, "center_y": 0.5}
            source: root.playlist_image_source
            color: 0.2, 0.2, 0.2, 0

        Label:
            id: playlist_name_popup
            color: 0.9, 0.25, 0.9, 1
            text: ""
            text_size: self.size
            font_size: 30
            pos_hint: {"x": 0.5, "center_y": 0.6}
            size_hint: 0.4, 0.2
            halign: "left"
            valign: "middle"

        Label:
            id: tracks_number_popup
            text: ""
            text_size: self.size
            font_size: 20
            pos_hint: {"x": 0.5, "center_y": 0.5}
            size_hint: 0.4, 0.1
            halign: "left"
            valign: "middle"

<NoPlaylistLoadedPopup@Popup>
    auto_dismiss: True
    title: "You should load playlist!"
    separator_color: 0.9, 0.25, 0.9, 1
    size_hint: 0.7, 0.7

    FloatLayout:
        width: root.width - 100
        height: root.height - 100

        Label:
            text: "It seems you haven't loaded playlist to app yet!\nGo back to main screen and load your playlist!"
            size_hint: 0.65, 0.3
            pos_hint: {"x": 0.3, "center_y": 0.6}

#-----------------------------------------POPUPS---------------------------------------------------------


#----------------------------------------MAIN-LAYOUT---------------------------------------------------
<MainLayout>
    FloatLayout:
        size: root.width, root.height
        canvas.before:
            Color:
                rgba: 0.1, 0.1, 0.1, 1
            Rectangle:
                pos: self.pos
                size: self.size


        AsyncImage:
            id: track_image
            size_hint: 0.4, 0.4
            pos_hint: {"center_x": 0.5, "center_y": 0.55}
            source: root.track_image_source

        Label:
            id: song_name
            color: 0.9, 0.25, 0.9, 1
            text: "Song name"
            text_size: self.size
            font_size: 30
            pos_hint: {"center_x": 0.5, "center_y": 0.3}
            size_hint: 0.5, 0.1
            halign: "center"
            valign: "middle"

        Label:
            id: artist_name
            text: "artist name"
            font_size: 20
            pos_hint: {"center_x": 0.5, "center_y": 0.25}
            size_hint: 0.5, 0.1
            halign: "center"
            valign: "middle"

        Button:
            pos_hint: {"center_x": 0.12, "center_y": 0.9}
            size_hint: 0.15, 0.07
            background_color: 0,0,0,0
            text: "Load playlist"
            bold: True
            color: 1, 1, 1, 1
            canvas.before:
                Color:
                    rgba: (0.9, 0.25, 0.9, 1) if self.state=='normal' else (0,.7,.7,1)
                RoundedRectangle:
                    pos: self.pos
                    size: self.size
                    radius: [25,]
            on_release:
                Factory.PlaylistPopup(root).open()

        Label:
            id: playlist_name
            size_hint: 0.15, 0.1
            text_size: self.size
            pos_hint: {"center_x": 0.2, "center_y": 0.48}
            text: ""
            halign: "center"
            valign: "bottom"

        AsyncImage:
            id: playlist_image
            size_hint: 0.15, 0.2
            pos_hint: {"center_x": 0.2, "center_y": 0.58}
            fit_mode: "contain"
            color: 0, 0, 0, 0


        ImageButton:
            id: stop_start_button
            source: "pictures/pause_button.png"
            size_hint: 0.075, 0.075
            default_size: 0.075, 0.075
            pos_hint: {"center_x": 0.5, "center_y": 0.15}
            on_press:
                root.click_animate(self);
                root.play_pause(self)

        ImageButton:
            id: previous
            source: "pictures/previous.png"
            size_hint: 0.04, 0.04
            default_size: 0.04, 0.04
            pos_hint: {"center_x": 0.42, "center_y": 0.15}
            on_press:
                root.click_animate(self);
                root.previous_song()


        ImageButton:
            id: next
            source: "pictures/next.png"
            size_hint: 0.04, 0.04
            default_size: 0.04, 0.04
            pos_hint: {"center_x": 0.58, "center_y": 0.15}
            on_press:
                root.click_animate(self);
                root.next_song()
        Image:
            source: "pictures/player_background.png"
            size_hint: 0.58, 0.1
            pos_hint: {"center_x": 0.5, "center_y": 0.07}
            fit_mode: "contain"

        Button:
            size_hint: 0.2, 0.1
            pos_hint: {"center_x": 0.8, "center_y": 0.2}
            text: "onepoint"
            on_release:
                root.manager.transition.direction = "left"
                root.one_point_mode()
                app.root.current = "onepoint"

        Slider:
            id: time_bar
            padding: 0
            cursor_size: 20, 20
            cursor_image: "pictures/slider_cursor.png"
            value_track: True
            value_track_color: 0.9, 0.25, 0.9, 1
            background_horizontal: "pictures/black.png"
            background_width: 5
            pos_hint: {"center_x": 0.5, "center_y": 0.07}
            size_hint: 0.5, 0.1
            min: 0
            max: 0.98
            step: 0.01
            orientation: 'horizontal'
            value: 0.5
            on_touch_up:
                root.change_song_moment(args[1], self)
#----------------------------------------MAIN-LAYOUT---------------------------------------------------

<OnePointSearchLayout>:
    FloatLayout:
        size: root.width, root.height
        canvas.before:
            Color:
                rgba: 0.1, 0.1, 0.1, 1
            Rectangle:
                pos: self.pos
                size: self.size

        Label:
            pos_hint: {"center_x": 0.2, "center_y": 0.85}
            size_hint: 0.2, 0.2
            text: "Loudness"

        CheckBox:
            id: loudness_checkbox
            pos_hint: {"center_x": 0.1, "center_y": 0.8}
            size_hint: 0.05, 0.05
            active: True
            background_checkbox_down: "pictures/checkbox_down.png"
            background_checkbox_normal: "pictures/checkbox_normal.png"
            on_release:
                root.update_states()

        Slider:
            id: loudness_slider
            padding: 0
            cursor_size: 20, 20
            cursor_image: "pictures/slider_cursor.png"
            value_track: True
            value_track_color: (0.9, 0.25, 0.9, 1) if self.disabled == False else (0.25, 0.25, 0.25, 1)
            background_horizontal: "pictures/black.png"
            cursor_disabled_image: "pictures/no_image.png"
            background_width: 5
            pos_hint: {"center_x": 0.3, "center_y": 0.8}
            size_hint: 0.3, 0.1
            min: 0
            max: 1
            step: 0.01
            orientation: 'horizontal'
            value: 0.5

        Label:
            pos_hint: {"center_x": 0.2, "center_y": 0.75}
            size_hint: 0.2, 0.2
            text: "Energy"

        CheckBox:
            id: energy_checkbox
            pos_hint: {"center_x": 0.1, "center_y": 0.7}
            size_hint: 0.05, 0.05
            active: True
            background_checkbox_down: "pictures/checkbox_down.png"
            background_checkbox_normal: "pictures/checkbox_normal.png"
            on_release:
                root.update_states()
        Slider:
            id: energy_slider
            padding: 0
            cursor_size: 20, 20
            cursor_image: "pictures/slider_cursor.png"
            value_track: True
            value_track_color: (0.9, 0.25, 0.9, 1) if self.disabled == False else (0.25, 0.25, 0.25, 1)
            background_horizontal: "pictures/black.png"
            cursor_disabled_image: "pictures/no_image.png"
            background_width: 5
            pos_hint: {"center_x": 0.3, "center_y": 0.7}
            size_hint: 0.3, 0.1
            min: 0
            max: 1
            step: 0.01
            orientation: 'horizontal'
            value: 0.5
        Label:
            pos_hint: {"center_x": 0.2, "center_y": 0.65}
            size_hint: 0.2, 0.2
            text: "Instrumentalness"

        CheckBox:
            id: instrumentalness_checkbox
            pos_hint: {"center_x": 0.1, "center_y": 0.6}
            size_hint: 0.05, 0.05
            active: True
            background_checkbox_down: "pictures/checkbox_down.png"
            background_checkbox_normal: "pictures/checkbox_normal.png"
            on_release:
                root.update_states()
        Slider:
            id: instrumentalness_slider
            padding: 0
            cursor_size: 20, 20
            cursor_image: "pictures/slider_cursor.png"
            value_track: True
            value_track_color: (0.9, 0.25, 0.9, 1) if self.disabled == False else (0.25, 0.25, 0.25, 1)
            background_horizontal: "pictures/black.png"
            cursor_disabled_image: "pictures/no_image.png"
            background_width: 5
            pos_hint: {"center_x": 0.3, "center_y": 0.6}
            size_hint: 0.3, 0.1
            min: 0
            max: 1
            step: 0.01
            orientation: 'horizontal'
            value: 0.5

        Label:
            pos_hint: {"center_x": 0.2, "center_y": 0.55}
            size_hint: 0.2, 0.2
            text: "Tempo"

        CheckBox:
            id: tempo_checkbox
            pos_hint: {"center_x": 0.1, "center_y": 0.5}
            size_hint: 0.05, 0.05
            active: True
            background_checkbox_down: "pictures/checkbox_down.png"
            background_checkbox_normal: "pictures/checkbox_normal.png"
            on_release:
                root.update_states()
        Slider:
            id: tempo_slider
            padding: 0
            cursor_size: 20, 20
            cursor_image: "pictures/slider_cursor.png"
            value_track: True
            value_track_color: (0.9, 0.25, 0.9, 1) if self.disabled == False else (0.25, 0.25, 0.25, 1)
            background_horizontal: "pictures/black.png"
            cursor_disabled_image: "pictures/no_image.png"
            background_width: 5
            pos_hint: {"center_x": 0.3, "center_y": 0.5}
            size_hint: 0.3, 0.1
            min: 0
            max: 1
            step: 0.01
            orientation: 'horizontal'
            value: 0.5

        Label:
            pos_hint: {"center_x": 0.2, "center_y": 0.45}
            size_hint: 0.2, 0.2
            text: "Valence"

        CheckBox:
            id: valence_checkbox
            pos_hint: {"center_x": 0.1, "center_y": 0.4}
            size_hint: 0.05, 0.05
            active: True
            background_checkbox_down: "pictures/checkbox_down.png"
            background_checkbox_normal: "pictures/checkbox_normal.png"
            on_release:
                root.update_states()

        Slider:
            id: valence_slider
            padding: 0
            cursor_size: 20, 20
            cursor_image: "pictures/slider_cursor.png"
            value_track: True
            value_track_color: (0.9, 0.25, 0.9, 1) if self.disabled == False else (0.25, 0.25, 0.25, 1)
            background_horizontal: "pictures/black.png"
            cursor_disabled_image: "pictures/no_image.png"
            background_width: 5
            pos_hint: {"center_x": 0.3, "center_y": 0.4}
            size_hint: 0.3, 0.1
            min: 0
            max: 1
            step: 0.01
            orientation: 'horizontal'
            value: 0.5

        Label:
            pos_hint: {"center_x": 0.2, "center_y": 0.35}
            size_hint: 0.2, 0.2
            text: "Danceability"

        CheckBox:
            id: danceability_checkbox
            pos_hint: {"center_x": 0.1, "center_y": 0.3}
            size_hint: 0.05, 0.05
            active: True
            background_checkbox_down: "pictures/checkbox_down.png"
            background_checkbox_normal: "pictures/checkbox_normal.png"
            on_release:
                root.update_states()

        Slider:
            id: danceability_slider
            padding: 0
            cursor_size: 20, 20
            cursor_image: "pictures/slider_cursor.png"
            value_track: True
            value_track_color: (0.9, 0.25, 0.9, 1) if self.disabled == False else (0.25, 0.25, 0.25, 1)
            background_horizontal: "pictures/black.png"
            cursor_disabled_image: "pictures/no_image.png"
            background_width: 5
            pos_hint: {"center_x": 0.3, "center_y": 0.3}
            size_hint: 0.3, 0.1
            min: 0
            max: 1
            step: 0.01
            orientation: 'horizontal'
            value: 0.5

        Label:
            text: "percentage of playlist returned"
            font_size: 20
            pos_hint: {"center_x": 0.7, "center_y": 0.65}
            size_hint: 0.2, 0.2
            valign: "center"
            halign: "center"


        Label:
            id: percentage_label
            font_size: 40
            color: (0.9, 0.25, 0.9, 1)
            pos_hint: {"center_x": 0.7, "center_y": 0.5}
            size_hint: 0.2, 0.2
            valign: "center"
            halign: "center"

        Slider:
            id: percentage_slider
            padding: 0
            cursor_size: 20, 20
            cursor_image: "pictures/slider_cursor.png"
            value_track: True
            value_track_color: (0.9, 0.25, 0.9, 1) if self.disabled == False else (0.25, 0.25, 0.25, 1)
            background_horizontal: "pictures/black.png"
            cursor_disabled_image: "pictures/no_image.png"
            background_width: 5
            pos_hint: {"center_x": 0.7, "center_y": 0.3}
            size_hint: 0.4, 0.1
            min: 0
            max: 0.5
            step: 0.01
            orientation: 'horizontal'
            value: 0.5
            on_touch_move:
                root.update_states()

        Button:
            text: "Back"
            pos_hint: {"center_x": 0.3, "center_y": 0.1}
            size_hint: 0.2, 0.1
            background_color: 0,0,0,0
            bold: True
            color: 1, 1, 1, 1
            canvas.before:
                Color:
                    rgba: (0.5, 0.5, 0.5, 1) if self.state=='normal' else (0,.7,.7,1)
                RoundedRectangle:
                    pos: self.pos
                    size: self.size
                    radius: [15,]
            on_release:
                root.manager.transition.direction = "right"
                app.root.current = "player"

        Button:
            text: "Apply"
            pos_hint: {"center_x": 0.4, "center_y": 0.1}
            size_hint: 0.2, 0.1
            background_color: 0,0,0,0
            bold: True
            color: 1, 1, 1, 1
            canvas.before:
                Color:
                    rgba: (0.9, 0.25, 0.9, 1) if self.state=='normal' else (0,.7,.7,1)
                RoundedRectangle:
                    pos: self.pos
                    size: self.size
                    radius: [15,]
            on_release:
                root.apply_one_point_search()
                root.manager.transition.direction = "right"
                app.root.current = "player"